import funkin.play.PlayState;
import funkin.play.PauseSubState;
import funkin.ui.debug.charting.ChartEditorState;
import funkin.play.PlayStatePlaylist;
import funkin.data.song.SongRegistry;
import funkin.ui.transition.LoadingState;
import flixel.FlxCamera;
import flixel.math.FlxMath;
import flixel.FlxSprite;
import flixel.math.FlxAngle;
import flixel.math.FlxPoint;
import flixel.text.FlxText;
import flixel.text.FlxTextBorderStyle;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxSpriteUtil;
import flixel.util.FlxTimer;
import funkin.graphics.adobeanimate.FlxAtlasSprite;
import funkin.graphics.FunkinSprite;
import funkin.ui.freeplay.charselect.PlayableCharacter;
import funkin.ui.MusicBeatSubState;
import funkin.graphics.shaders.AdjustColorShader;
import flixel.addons.display.FlxTiledSprite;
import flixel.addons.display.FlxBackdrop;
import funkin.PlayerSettings;
import funkin.modding.module.Module;
import funkin.modding.events.ScriptEvent;
import funkin.modding.base.ScriptedMusicBeatSubState;
import funkin.modding.base.ScriptedFlxRuntimeShader;
import funkin.modding.base.ScriptedMusicBeatState;
import funkin.util.ReflectUtil;
import flixel.FlxG;
import funkin.audio.FunkinSound;
import funkin.util.Constants;
import StringTools;
import funkin.save.Save;
import funkin.Preferences;

class AdjustStagePropAction extends Module
{
    public function new()
    {
        super('AdjustStagePropAction');
    }

    var defaultAlphaValues:Array<String> = [];
    var props:Array<String> = [];

    function onSongRetry(event:ScriptEvent)
    {
		super.onSongRetry(event);
        
        if (props.length > 0)
        {
            for (i in 0...props.length)
            {
                PlayState.instance.currentStage.getNamedProp(props[i]).alpha = defaultAlphaValues[i];
            }

            props = [];
        }
    }

    public override function onSongEvent(scriptEvent:SongEventScriptEvent)
    {
        super.onSongEvent(scriptEvent);

        if (scriptEvent.eventData.eventKind == "AdjustStageProp")
        {
            defaultAlphaValues.push(PlayState.instance.currentStage.getNamedProp(scriptEvent.eventData.value.propName).alpha);
            props.push(scriptEvent.eventData.value.propName);

            if (scriptEvent.eventData.value.duration != 0)
                FlxTween.tween(PlayState.instance.currentStage.getNamedProp(scriptEvent.eventData.value.propName), {alpha: scriptEvent.eventData.value.alpha}, PlayState.instance.currentStage.getNamedProp(scriptEvent.eventData.value.duration), {ease: FlxEase.quadOut});
            else
                PlayState.instance.currentStage.getNamedProp(scriptEvent.eventData.value.propName).alpha = PlayState.instance.currentStage.getNamedProp(scriptEvent.eventData.value.alpha);
        }
    }
}
